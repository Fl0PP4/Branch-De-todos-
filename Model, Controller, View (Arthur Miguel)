package Model;

import Db.Database;
import java.sql.*;

public class User {
    private int id;
    private String name;
    private String email;

    public User(int id, String name, String email) {
        this.id = id;
        this.name = name;
        this.email = email;
    }

    // Getters e setters
    public int getId() 
    { return id; }
    public void setId(int id)
    { this.id = id; }

    public String getName()
    { return name; }
    public void setName(String name)
    { this.name = name; }

    public String getEmail() 
    { return email; }

    public void setEmail(String email) 
    { this.email = email; }

    // Sobrescrevendo toString para exibir dados do usuário
    @Override
    public String toString() {
        return "ID: " + id + ", Nome: " + name + ", Email: " + email;
    }
}




package Controller;

import Db.Database;
import Model.User;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class UserController {

    public List<User> listarUsuarios() {
        List<User> usuarios = new ArrayList<>();
//try cach para lidar com possíveis exceções
        // tenta e depois fecha a conexão
        try (Connection conn = Database.getConnection()) {
            String sql = "SELECT * FROM Usuario"; 
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                User u = new User(
                        rs.getInt("id"),
                        rs.getString("name"),
                        rs.getString("email")
                );
                usuarios.add(u);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return usuarios;
    }
}

package View;

import Model.User;
import java.util.List;

public class UserView {

    public void mostrarUsuarios(List<User> usuarios) {
        System.out.println("=== Lista de Usuários ===");
        for (User u : usuarios) {
            System.out.println(u); 
        }
    }
}
